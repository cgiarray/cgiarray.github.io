<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('hamburger-toggle');
    const navMenu = document.querySelector('nav > ul');

    if (!toggleBtn || !navMenu) {
      console.warn('❌ Could not find toggle button or nav menu');
      return;
    }

    // Toggle main mobile menu
    toggleBtn.addEventListener('click', () => {
      navMenu.classList.toggle('active');
      toggleBtn.classList.toggle('open');
    });

    const dropdownItems = navMenu.querySelectorAll('li.dropdown');

    dropdownItems.forEach((dropdownItem) => {
      const link = dropdownItem.querySelector('a');
      const submenu = dropdownItem.querySelector('ul.dropdown-menu');

      if (!link || !submenu) return;

      // Create dropdown toggle arrow button
      const toggleButton = document.createElement('button');
      toggleButton.classList.add('dropdown-toggle');
      toggleButton.setAttribute('aria-expanded', 'false');
      toggleButton.setAttribute('aria-label', 'Toggle submenu');
      toggleButton.textContent = '˅';

      // Wrap link and toggle button together
      const wrapper = document.createElement('div');
      wrapper.classList.add('mobile-link-wrapper');
      dropdownItem.insertBefore(wrapper, link);
      wrapper.appendChild(link);
      wrapper.appendChild(toggleButton);

      const toggleSubmenu = () => {
        const isOpen = submenu.classList.toggle('open');
        toggleButton.classList.toggle('rotated', isOpen);
        toggleButton.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
        dropdownItem.classList.toggle('open', isOpen);

        // Highlight this item if submenu is open, remove highlight from others
        dropdownItems.forEach((item) => {
          if (item !== dropdownItem) {
            item.classList.remove('active-link');
          }
        });
        if (isOpen) {
          dropdownItem.classList.add('active-link');
        } else {
          dropdownItem.classList.remove('active-link');
        }
      };

      toggleButton.addEventListener('click', toggleSubmenu);

      link.addEventListener('click', (e) => {
        if (window.innerWidth <= 768) {
          e.preventDefault();
          toggleSubmenu();
        }
      });
    });

    // Close open submenu when clicking outside
    document.addEventListener('click', (event) => {
      if (!navMenu.classList.contains('active')) return;

      dropdownItems.forEach((dropdownItem) => {
        const submenu = dropdownItem.querySelector('ul.dropdown-menu.open');
        if (submenu && !dropdownItem.contains(event.target)) {
          submenu.classList.remove('open');
          dropdownItem.classList.remove('open');
          dropdownItem.classList.remove('active-link');

          const toggleButton = dropdownItem.querySelector('button.dropdown-toggle');
          if (toggleButton) {
            toggleButton.classList.remove('rotated');
            toggleButton.setAttribute('aria-expanded', 'false');
          }
        }
      });
    });
  });
</script>
